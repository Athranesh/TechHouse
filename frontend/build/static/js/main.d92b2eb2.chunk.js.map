{"version":3,"sources":["types/productTypes.js","types/cartTypes.js","types/userTypes.js","types/orderTypes.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","hooks/useLogout.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/ProductActions.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","components/FormContainer.js","components/CheckoutSteps.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/cartActions.js","screens/ShippingScreen.js","screens/ProductScreen.js","screens/PaymentScreen.js","screens/CartScreen.js","actions/orderActions.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/ProductListScreen.js","screens/ProductCreateScreen.js","screens/ProductEditScreen.js","screens/UserEditScreen.js","screens/OrderListScreen.js","screens/AdminOrderScreen.js","App.js","serviceWorker.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_RESET","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","TOP_PRODUCT_LIST_REQUEST","TOP_PRODUCT_LIST_SUCCESS","TOP_PRODUCT_LIST_FAIL","PRODUCT_REQUEST","PRODUCT_SUCCESS","PRODUCT_FAIL","PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_RESET","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_RESET","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","CREATE_REVIEW_REQUEST","CREATE_REVIEW_RESET","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","CLEAR_LOGIN_ERROR","CLEAR_REGISTER_ERROR","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_UPDATE_SUCCESS","USER_DETAILS_UPDATE_RESET","USER_DETAILS_FAIL","USER_DETAILS_RESET","CLEAR_DETAILS_ERROR","CLEAR_DETAILS","USER_DETAILS_UPDATE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL","DELETE_USER_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAIL","CLEAR_ORDER_DETAILS","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_SUCCESS","ORDER_DELIVERED_FAIL","ORDER_DELIVERED_RESET","reducer","combineReducers","productList","state","loading","products","error","action","type","payload","pages","page","topProducts","topProductList","productDetails","product","cart","cartItems","shippingAddress","newItem","existsItem","find","item","map","newCartItems","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","updated","updateError","orderCreate","order","success","getOrder","orderPay","userList","users","deleteUser","deleteProduct","createProduct","updateProduct","orderList","orders","orderDelivered","date","createReview","initialState","localStorage","getItem","JSON","parse","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","clearRegisterError","getUserById","id","dispatch","getState","a","config","headers","authorization","token","axios","get","data","response","message","clearDetailsError","resetUpdate","listUsers","useLogout","useDispatch","history","useHistory","push","removeItem","SearchBox","useState","keyword","setKeyword","size","setSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","Form","onSubmit","e","preventDefault","trim","inline","Control","style","width","htmlSize","name","onChange","target","value","placeholder","className","Button","variant","Header","useSelector","logout","Navbar","expand","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","render","NavDropdown","title","Item","onClick","Link","isAdmin","Footer","Row","Col","Rating","text","color","starCount","uiStarClasses","length","uiStar","uiStarClass","index","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","getProduct","userId","user","productData","post","put","Message","children","Alert","Loader","height","Spinner","animation","role","margin","display","Paginate","Pagination","Array","keys","x","active","ProductCarousel","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","FormContainer","xs","CheckoutSteps","step1","step2","step3","step4","pathname","referrer","step","disabled","LoginScreen","location","email","setEmail","password","setPassword","redirect","submitHandler","setItem","stringify","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","newPassword","setNewPassword","setRedirect","userLoginInfo","details","updateUserDetails","marginBottom","ListGroup","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","renderOrderLinks","addToCart","qty","countInStock","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","existingAddress","saveShippingAddress","required","ProductScreen","itemId","setQty","setRating","comment","setComment","createReviewSuccess","createReviewError","review","renderReviewForm","reviews","userHasPurchased","userHasReceived","row","addToCartHandler","description","PaymentScreen","setpaymentMethod","method","Check","label","checked","CartScreen","productId","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","getOrderById","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderData","orderItems","createOrder","OrderScreen","sdkReady","setSdkReady","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","loadingPay","paypal","successPaymentHandler","paymentResult","payOrder","href","amount","onSuccess","UserListScreen","deleteSuccess","deleteHandler","confirm","delete","ProductListScreen","createSuccess","updateSuccess","deleteProductHandler","deleteProductById","category","brand","ProductCreateScreen","setPrice","setImage","setBrand","setCategory","setDescription","count","setCount","formData","setFormData","uploading","setUploading","uploadFileHandler","file","files","FormData","append","File","custom","rows","ProductEditScreen","detailsError","detailsLoading","updateLoading","submitHandlerWithImage","UserEditScreen","setIsAdmin","OrderListScreen","AdminOrderScreen","orderId","setDeliveredAt","deliveryBtnActive","setDeliveryBtnActive","deliverSuccess","deliverError","deliverLoading","deliverDate","orderDeliveredAt","setDeliveredHandler","deliverOrder","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d92b2eb2.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_RESET = 'PRODUCT_LIST_RESET ';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const TOP_PRODUCT_LIST_REQUEST = 'TOP_PRODUCT_LIST_REQUEST';\r\nexport const TOP_PRODUCT_LIST_SUCCESS = 'TOP_PRODUCT_LIST_SUCCESS';\r\nexport const TOP_PRODUCT_LIST_FAIL = 'TOP_PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_REQUEST = 'PRODUCT_REQUEST';\r\nexport const PRODUCT_SUCCESS = 'PRODUCT_SUCCESS';\r\nexport const PRODUCT_FAIL = 'PRODUCT_FAIL';\r\nexport const PRODUCT_RESET = 'PRODUCT_RESET';\r\n\r\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST';\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET ';\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS';\r\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL';\r\n\r\nexport const CREATE_PRODUCT_REQUEST = 'CREATE_PRODUCT_REQUEST';\r\nexport const CREATE_PRODUCT_RESET = 'CREATE_PRODUCT_RESET ';\r\nexport const CREATE_PRODUCT_SUCCESS = 'CREATE_PRODUCT_SUCCESS';\r\nexport const CREATE_PRODUCT_FAIL = 'CREATE_PRODUCT_FAIL';\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST';\r\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET ';\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS';\r\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL';\r\n\r\nexport const CREATE_REVIEW_REQUEST = 'CREATE_REVIEW_REQUEST';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET ';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\nexport const CART_RESET = 'CART_RESET';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const CLEAR_LOGIN_ERROR = 'CLEAR_LOGIN_ERROR';\r\nexport const CLEAR_REGISTER_ERROR = 'CLEAR_REGISTER_ERROR';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_UPDATE_SUCCESS = 'USER_DETAILS_UPDATE_SUCCESS';\r\nexport const USER_DETAILS_UPDATE_RESET = 'USER_DETAILS_UPDATE_RESET';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\nexport const CLEAR_DETAILS_ERROR = 'CLEAR_DETAILS_ERROR';\r\nexport const CLEAR_DETAILS = 'CLEAR_DETAILS';\r\nexport const USER_DETAILS_UPDATE_FAIL = 'USER_DETAILS_UPDATE_FAIL';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const GET_ORDER_REQUEST = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAIL = 'GET_ORDER_FAIL';\r\n\r\nexport const CLEAR_ORDER_DETAILS = 'CLEAR_ORDER_DETAILS';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET';\r\n\r\nexport const ORDER_DELIVERED_REQUEST = 'ORDER_DELIVERED_REQUEST';\r\nexport const ORDER_DELIVERED_SUCCESS = 'ORDER_DELIVERED_SUCCESS';\r\nexport const ORDER_DELIVERED_FAIL = 'ORDER_DELIVERED_FAIL';\r\nexport const ORDER_DELIVERED_RESET = 'ORDER_DELIVERED_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  deleteProductReducer,\r\n  createProductReducer,\r\n  updateProductReducer,\r\n  createReviewReducer,\r\n  topProductListReducer,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userListReducer,\r\n  deleteUserReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  orderListReducer,\r\n  orderCreateReducer,\r\n  getOrderReducer,\r\n  orderPayReducer,\r\n  orderDeliveredReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  topProductList: topProductListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  orderCreate: orderCreateReducer,\r\n  getOrder: getOrderReducer,\r\n  orderPay: orderPayReducer,\r\n  userList: userListReducer,\r\n  deleteUser: deleteUserReducer,\r\n  deleteProduct: deleteProductReducer,\r\n  createProduct: createProductReducer,\r\n  updateProduct: updateProductReducer,\r\n  orderList: orderListReducer,\r\n  orderDelivered: orderDeliveredReducer,\r\n  createReview: createReviewReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : null;\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\r\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\r\n  : null;\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentMethodFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  TOP_PRODUCT_LIST_REQUEST,\r\n  TOP_PRODUCT_LIST_SUCCESS,\r\n  TOP_PRODUCT_LIST_FAIL,\r\n  PRODUCT_REQUEST,\r\n  PRODUCT_SUCCESS,\r\n  PRODUCT_FAIL,\r\n  PRODUCT_RESET,\r\n  PRODUCT_LIST_RESET,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_RESET,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  CREATE_PRODUCT_REQUEST,\r\n  CREATE_PRODUCT_RESET,\r\n  CREATE_PRODUCT_SUCCESS,\r\n  CREATE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_RESET,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  CREATE_REVIEW_REQUEST,\r\n  CREATE_REVIEW_RESET,\r\n  CREATE_REVIEW_SUCCESS,\r\n  CREATE_REVIEW_FAIL,\r\n} from '../types/productTypes';\r\n\r\nexport const productListReducer = (\r\n  state = { loading: false, products: [], error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n        topProducts: action.payload.topProducts,\r\n      };\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_LIST_RESET:\r\n      return { loading: false, products: [], error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const topProductListReducer = (\r\n  state = { loading: false, products: [], error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case TOP_PRODUCT_LIST_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case TOP_PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        topProducts: action.payload,\r\n      };\r\n\r\n    case TOP_PRODUCT_LIST_FAIL:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { loading: false, product: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_RESET:\r\n      return { loading: false, product: null, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteProductReducer = (\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case DELETE_PRODUCT_REQUEST:\r\n      return { loading: true, error: null, success: false };\r\n    case DELETE_PRODUCT_SUCCESS:\r\n      return { loading: false, error: null, success: true };\r\n    case DELETE_PRODUCT_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    case DELETE_PRODUCT_RESET:\r\n      return { loading: false, error: null, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createProductReducer = (\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CREATE_PRODUCT_REQUEST:\r\n      return { loading: true, error: null, success: false };\r\n    case CREATE_PRODUCT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        error: null,\r\n        success: true,\r\n        product: action.payload,\r\n      };\r\n    case CREATE_PRODUCT_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    case CREATE_PRODUCT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateProductReducer = (\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCT_REQUEST:\r\n      return { loading: true, error: null, success: false };\r\n    case UPDATE_PRODUCT_SUCCESS:\r\n      return { loading: false, error: null, success: true };\r\n    case UPDATE_PRODUCT_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    case UPDATE_PRODUCT_RESET:\r\n      return { loading: false, error: null, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const createReviewReducer = (\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CREATE_REVIEW_REQUEST:\r\n      return { loading: true, error: null, success: false };\r\n    case CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, error: null, success: true };\r\n    case CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    case CREATE_REVIEW_RESET:\r\n      return { loading: false, error: null, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_RESET,\r\n} from '../types/cartTypes';\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      //.product is the id\r\n      const newItem = action.payload;\r\n      const existsItem = state.cartItems.find(\r\n        (item) => item.product === newItem.product\r\n      );\r\n\r\n      if (existsItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: [\r\n            ...state.cartItems.map((item) =>\r\n              item.product === existsItem.product ? newItem : item\r\n            ),\r\n          ],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, newItem],\r\n        };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      const newCartItems = state.cartItems.filter(\r\n        (item) => item.product !== action.payload\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        cartItems: newCartItems,\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case CART_RESET:\r\n      return {\r\n        cartItems: [],\r\n        shippingAddress: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGOUT,\r\n  CLEAR_LOGIN_ERROR,\r\n  CLEAR_REGISTER_ERROR,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  CLEAR_DETAILS_ERROR,\r\n  CLEAR_DETAILS,\r\n  USER_DETAILS_UPDATE_SUCCESS,\r\n  USER_DETAILS_UPDATE_RESET,\r\n  USER_DETAILS_UPDATE_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  DELETE_USER_FAIL,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_RESET,\r\n  DELETE_USER_SUCCESS,\r\n} from '../types/userTypes';\r\n\r\nexport const userLoginReducer = (\r\n  state = { loading: false, userInfo: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true, userInfo: null, error: null };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, error: null };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, userInfo: null, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return { loading: false, userInfo: null, error: null };\r\n\r\n    case CLEAR_LOGIN_ERROR:\r\n      return { ...state, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (\r\n  state = { loading: false, userInfo: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true, userInfo: null, error: null };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, error: null };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, userInfo: null, error: action.payload };\r\n\r\n    case CLEAR_REGISTER_ERROR:\r\n      return { ...state, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (\r\n  state = {\r\n    loading: false,\r\n    userInfo: null,\r\n    error: null,\r\n    updated: false,\r\n    updateError: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_LOGOUT:\r\n      return {\r\n        loading: false,\r\n        userInfo: null,\r\n        error: null,\r\n        updated: false,\r\n        updateError: null,\r\n      };\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_RESET:\r\n      return {\r\n        loading: false,\r\n        userInfo: null,\r\n        error: null,\r\n        updated: false,\r\n        updateError: null,\r\n      };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: action.payload,\r\n        error: null,\r\n        updated: false,\r\n      };\r\n    case USER_DETAILS_UPDATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: action.payload,\r\n        error: null,\r\n        updated: true,\r\n      };\r\n    case USER_DETAILS_UPDATE_RESET:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updated: false,\r\n      };\r\n    case USER_DETAILS_UPDATE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updated: true,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, userInfo: null, error: action.payload };\r\n    case CLEAR_DETAILS_ERROR:\r\n      return { ...state, error: null };\r\n\r\n    case CLEAR_DETAILS:\r\n      return {\r\n        loading: false,\r\n        userInfo: null,\r\n        error: null,\r\n        updated: false,\r\n        updateError: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteUserReducer = (\r\n  state = { loading: false, success: false, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case DELETE_USER_REQUEST:\r\n      return { loading: true, success: false, error: null };\r\n\r\n    case DELETE_USER_SUCCESS:\r\n      return { loading: false, success: true, error: null };\r\n\r\n    case DELETE_USER_FAIL:\r\n      return {\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case DELETE_USER_RESET:\r\n      return { loading: false, success: false, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  GET_ORDER_FAIL,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_RESET,\r\n  ORDER_LIST_SUCCESS,\r\n  CLEAR_ORDER_DETAILS,\r\n  ORDER_DELIVERED_FAIL,\r\n  ORDER_DELIVERED_REQUEST,\r\n  ORDER_DELIVERED_RESET,\r\n  ORDER_DELIVERED_SUCCESS,\r\n} from '../types/orderTypes';\r\n\r\nexport const orderCreateReducer = (\r\n  state = { loading: false, order: null, success: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOrderReducer = (\r\n  state = { loading: false, order: null, error: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_ORDER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case GET_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        error: null,\r\n        order: action.payload,\r\n      };\r\n\r\n    case GET_ORDER_FAIL:\r\n      return {\r\n        loading: false,\r\n        order: null,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ORDER_DETAILS:\r\n      return {\r\n        loading: false,\r\n        order: null,\r\n        error: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (\r\n  state = { orders: [], loading: false, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n        orders: [],\r\n      };\r\n\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n        orders: [],\r\n      };\r\n    case ORDER_LIST_RESET:\r\n      return { orders: [], loading: false, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliveredReducer = (\r\n  state = { success: false, loading: false, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVERED_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DELIVERED_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        date: action.payload,\r\n      };\r\n\r\n    case ORDER_DELIVERED_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVERED_RESET:\r\n      return { success: false, loading: false, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  CLEAR_LOGIN_ERROR,\r\n  CLEAR_REGISTER_ERROR,\r\n  USER_LOGOUT,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  CLEAR_DETAILS_ERROR,\r\n  CLEAR_DETAILS,\r\n  USER_DETAILS_UPDATE_SUCCESS,\r\n  USER_DETAILS_UPDATE_RESET,\r\n  USER_DETAILS_UPDATE_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  DELETE_USER_FAIL,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n} from '../types/userTypes';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('userInfo');\r\n\r\n  return {\r\n    type: USER_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const clearLoginError = () => {\r\n  return {\r\n    type: CLEAR_LOGIN_ERROR,\r\n  };\r\n};\r\nexport const clearRegisterError = () => {\r\n  return {\r\n    type: CLEAR_REGISTER_ERROR,\r\n  };\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // dispatch(login(email, password));\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//To be used by admin\r\nexport const getUserById = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n  try {\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/admin/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n//To be used by admin\r\nexport const updateUserById = (id, details) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n  try {\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/admin/${id}`, details, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n  try {\r\n    const { userInfo } = getState().userLogin;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get('/api/users/profile', config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearDetailsError = () => {\r\n  return {\r\n    type: CLEAR_DETAILS_ERROR,\r\n  };\r\n};\r\n\r\nexport const clearDetails = () => {\r\n  return {\r\n    type: CLEAR_DETAILS,\r\n  };\r\n};\r\n\r\nexport const resetUpdate = () => {\r\n  return {\r\n    type: USER_DETAILS_UPDATE_RESET,\r\n  };\r\n};\r\n\r\nexport const updateUserDetails = (details) => async (dispatch, getState) => {\r\n  dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n  try {\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put('/api/users/profile', details, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    //It is important for the app to update the login info as well, for example to change the navbar user's name.\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  dispatch({ type: USER_LIST_REQUEST });\r\n\r\n  try {\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get('/api/users/admin', config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  dispatch({ type: DELETE_USER_REQUEST });\r\n\r\n  try {\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/admin/${id}`, config);\r\n\r\n    dispatch({ type: DELETE_USER_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logout } from '../actions/userActions';\r\n\r\nfunction useLogout() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  return function () {\r\n    history.push('/');\r\n    dispatch(logout());\r\n  };\r\n}\r\n\r\nexport default useLogout;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const [size, setSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth > 975) {\r\n        setSize(40);\r\n      } else {\r\n        setSize(null);\r\n      }\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  });\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        style={{ width: '70%' }}\r\n        htmlSize={size && size}\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search Products...\"\r\n        className=\"mr-sm-1 mr-md-0 my-sm-4 my-md-0\"\r\n      ></Form.Control>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"outline-success\"\r\n        className=\"p-2 mx-2 mr-md-2\"\r\n      >\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { Route } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport useLogout from '../hooks/useLogout';\r\nimport SearchBox from './SearchBox';\r\n\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n\r\n  const logout = useLogout();\r\n\r\n  return (\r\n    <header>\r\n      <Navbar className=\"navbar-dark bg-primary\" expand=\"lg\">\r\n        <Container>\r\n          <LinkContainer className=\"align-self-start\" to=\"/\">\r\n            <Navbar.Brand className=\"\">Tech House</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <Route\r\n                render={({ history }) => <SearchBox history={history} />}\r\n              />\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <NavDropdown.Item onClick={logout}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link className=\"mr-4 mr-sm-0\">\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link className=\"mr-2 mr-sm-0\">\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; TechHouse</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Rating({ value, text, color }) {\r\n  const maxStars = 5;\r\n\r\n  let starCount = value;\r\n\r\n  const uiStarClasses = [];\r\n\r\n  while (uiStarClasses.length < maxStars) {\r\n    const uiStar =\r\n      starCount >= 1\r\n        ? 'fas fa-star'\r\n        : starCount >= 0.5\r\n        ? 'fas fa-star-half-alt'\r\n        : 'far fa-star';\r\n    starCount -= 1;\r\n    uiStarClasses.push(uiStar);\r\n  }\r\n\r\n  return (\r\n    <div className=\"rating\">\r\n      {uiStarClasses.map((uiStarClass, index) => {\r\n        return (\r\n          <span key={index}>\r\n            <i style={{ color }} className={uiStarClass}></i>\r\n          </span>\r\n        );\r\n      })}{' '}\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n};\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\nfunction Product({ product }) {\r\n  return (\r\n    <Card className=\"my-4 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  TOP_PRODUCT_LIST_REQUEST,\r\n  TOP_PRODUCT_LIST_SUCCESS,\r\n  TOP_PRODUCT_LIST_FAIL,\r\n  PRODUCT_REQUEST,\r\n  PRODUCT_SUCCESS,\r\n  PRODUCT_FAIL,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  CREATE_PRODUCT_REQUEST,\r\n  CREATE_PRODUCT_FAIL,\r\n  CREATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  CREATE_REVIEW_REQUEST,\r\n  CREATE_REVIEW_FAIL,\r\n  CREATE_REVIEW_SUCCESS,\r\n} from '../types/productTypes';\r\nimport axios from 'axios';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TOP_PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get('/api/products/top');\r\n\r\n    dispatch({ type: TOP_PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TOP_PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_REQUEST });\r\n\r\n    const userId = getState().userLogin.userInfo\r\n      ? getState().userLogin.userInfo._id\r\n      : null;\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products/${id}/${userId}`,\r\n\r\n      { user: userId }\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProductById = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n\r\n    const token = getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'Application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/admin/${id}`, config);\r\n\r\n    dispatch({ type: DELETE_PRODUCT_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const createProduct = (productData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CREATE_PRODUCT_REQUEST });\r\n\r\n    const token = getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'Application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/products/admin/',\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: CREATE_PRODUCT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (id, productData) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n\r\n    const token = getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'Application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/admin/${id}`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: UPDATE_PRODUCT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const createReview = (id, review) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CREATE_REVIEW_REQUEST });\r\n\r\n    const token = getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'Application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/products/${id}/reviews`, review, config);\r\n\r\n    dispatch({ type: CREATE_REVIEW_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = ({ width, height }) => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: width || '100px',\r\n        height: height || '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  if (!isAdmin) {\r\n    return (\r\n      pages > 1 && (\r\n        //is float left by default\r\n        // <div className=\"float-left\">\r\n        <Pagination>\r\n          {[...Array(pages).keys()].map((x) => (\r\n            //x+1 being the page number\r\n\r\n            <LinkContainer\r\n              key={x + 1}\r\n              to={\r\n                keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`\r\n              }\r\n            >\r\n              <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n            </LinkContainer>\r\n          ))}\r\n        </Pagination>\r\n        // </div>\r\n      )\r\n    );\r\n  } else {\r\n    return (\r\n      pages > 1 && (\r\n        <Pagination>\r\n          {[...Array(pages).keys()].map((x) => (\r\n            //x+1 being the page number\r\n            <LinkContainer key={x + 1} to={`/admin/productlist/${x + 1}`}>\r\n              <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n            </LinkContainer>\r\n          ))}\r\n        </Pagination>\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/ProductActions';\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { topProducts, error, loading } = useSelector(\r\n    (state) => state.topProductList\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!topProducts && !loading) {\r\n      dispatch(listTopProducts());\r\n    }\r\n  }, [dispatch, topProducts, loading]);\r\n\r\n  if (!topProducts) return <></>;\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n      {topProducts.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Link>\r\n          <Carousel.Caption className=\"carousel-caption\">\r\n            <h2>\r\n              {product.name} {product.price}\r\n            </h2>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { listProducts } from '../actions/ProductActions';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\n\r\nfunction HomeScreen({ match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const keyword = match.params.keyword;\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const renderScreen = () => {\r\n    if (!loading && !error && !products.length && keyword) {\r\n      return <h6>No results found.</h6>;\r\n    }\r\n\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else if (error) {\r\n      return <Message variant=\"danger\">{error}</Message>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!keyword && <ProductCarousel />}\r\n\r\n      <h1>Latest Products</h1>\r\n      {renderScreen()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer\r\n            to={{\r\n              pathname: '/login',\r\n              state: {\r\n                referrer: 'shipping',\r\n                step: true,\r\n              },\r\n            }}\r\n          >\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled> Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled> Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled> Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/order\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled> Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login, clearLoginError } from '../actions/userActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst LoginScreen = ({ history, location }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.state ? location.state.referrer : '/';\r\n\r\n  const step = location.state ? location.state.step : null;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n\r\n    return function cleanUp() {\r\n      dispatch(clearLoginError());\r\n    };\r\n  }, [history, userInfo, redirect, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Form\r\n            onSubmit={submitHandler}\r\n            // style={{ paddingTop: error || loading ? '0' : '63px' }}\r\n          >\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Sign In\r\n            </Button>\r\n          </Form>\r\n\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              New Customer?{' '}\r\n              <Link\r\n                to={\r\n                  redirect\r\n                    ? {\r\n                        pathname: '/register',\r\n                        state: {\r\n                          referrer: redirect,\r\n                        },\r\n                      }\r\n                    : '/register'\r\n                }\r\n              >\r\n                Register\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      {step && redirect === 'shipping' && <CheckoutSteps step1 />}\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {renderScreen()}\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nimport { register, clearRegisterError } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ history, location }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n\r\n  const { error, loading } = userRegister;\r\n\r\n  const redirect = location.state ? location.state.referrer : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n\r\n    return function cleanUp() {\r\n      dispatch(clearRegisterError());\r\n    };\r\n  }, [history, userInfo, redirect, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password === confirmPassword) {\r\n      dispatch(register(name, email, password));\r\n    } else {\r\n      dispatch(clearRegisterError());\r\n      setMessage('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Form\r\n            onSubmit={submitHandler}\r\n            // style={{ paddingTop: error || loading ? '0' : '63px' }}\r\n          >\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirm-password\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => {\r\n                  setConfirmPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Register\r\n            </Button>\r\n          </Form>\r\n\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              Have an Account?{' '}\r\n              <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                Login\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign up</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {renderScreen()}\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, ListGroup, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { USER_DETAILS_RESET } from '../types/userTypes';\r\nimport {\r\n  getUserDetails,\r\n  clearDetailsError,\r\n  updateUserDetails,\r\n  resetUpdate,\r\n} from '../actions/userActions';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { error, loading, userInfo, updated } = useSelector(\r\n    (state) => state.userDetails\r\n  );\r\n\r\n  if (updated && !error) {\r\n    if (!message) setMessage('Profile updated');\r\n  }\r\n\r\n  const userLoginInfo = useSelector((state) => state.userLogin.userInfo);\r\n\r\n  useEffect(() => {\r\n    if (!userLoginInfo) {\r\n      setRedirect({\r\n        pathname: '/login',\r\n        state: {\r\n          referrer: '/profile',\r\n        },\r\n      });\r\n    }\r\n    return () => {\r\n      dispatch(clearDetailsError());\r\n      dispatch(resetUpdate());\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n    };\r\n  }, [dispatch, history, userLoginInfo]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      dispatch(getUserDetails());\r\n    } else {\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n    }\r\n  }, [dispatch, history, userInfo, userLoginInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password.length && confirmPassword.length) {\r\n      if (password === confirmPassword) {\r\n        //Creating new details object\r\n        const details = { name, email, password };\r\n\r\n        //Adding new password to details object\r\n        if (newPassword.length) {\r\n          if (message) setMessage(null);\r\n          details.newPassword = newPassword;\r\n        }\r\n\r\n        dispatch(updateUserDetails(details));\r\n\r\n        setNewPassword('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n      } else {\r\n        setMessage('Current passwords do not match');\r\n      }\r\n    } else {\r\n      setMessage('Please enter and confirm your current password');\r\n    }\r\n  };\r\n\r\n  const renderOrderLinks = () => {\r\n    if (userInfo && userInfo.orders.length) {\r\n      return (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {userInfo.orders.map((order) => {\r\n              return (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"new-password\">\r\n              <Form.Label>New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter New Password\"\r\n                value={newPassword}\r\n                onChange={(e) => {\r\n                  setNewPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Current Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Current Password\"\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirm-password\">\r\n              <Form.Label>Confirm Current Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm Current Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => {\r\n                  setConfirmPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <h2>User Profile</h2>\r\n      <Row>\r\n        <Col md={3} style={{ marginBottom: 30 }}>\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {message && (\r\n            <Message variant={!error ? 'success' : 'danger'}>{message}</Message>\r\n          )}\r\n          {renderScreen()}\r\n        </Col>\r\n        <Col md={9}>\r\n          <>\r\n            <h6>My Orders</h6>\r\n            <ListGroup>{renderOrderLinks()}</ListGroup>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../types/cartTypes';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}/null`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (address, city, postalCode, country) => (\r\n  dispatch\r\n) => {\r\n  const data = { address, city, postalCode, country };\r\n\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (method) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: method,\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(method));\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [postalCode, setPostalCode] = useState('');\r\n  const [country, setCountry] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const existingAddress = useSelector((state) => state.cart.shippingAddress);\r\n\r\n  useEffect(() => {\r\n    if (existingAddress) {\r\n      setAddress(existingAddress.address);\r\n      setCity(existingAddress.city);\r\n      setPostalCode(existingAddress.postalCode);\r\n      setCountry(existingAddress.country);\r\n    }\r\n  }, [existingAddress]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(saveShippingAddress(address, city, postalCode, country));\r\n\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => {\r\n              setAddress(e.target.value);\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => {\r\n              setCity(e.target.value);\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"postal-code\">\r\n          <Form.Label>Postal Code:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => {\r\n              setPostalCode(e.target.value);\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>country:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => {\r\n              setCountry(e.target.value);\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct, createReview } from '../actions/ProductActions';\r\nimport { CREATE_REVIEW_RESET } from '../types/productTypes';\r\n\r\nfunction ProductScreen({ history, match }) {\r\n  const itemId = match.params.id;\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLoginInfo = useSelector((state) => state.userLogin.userInfo);\r\n  const productDetails = useSelector((state) => state.productDetails.product);\r\n\r\n  const {\r\n    success: createReviewSuccess,\r\n    error: createReviewError,\r\n  } = useSelector((state) => state.createReview);\r\n\r\n  useEffect(() => {\r\n    if (createReviewSuccess) {\r\n      setComment('');\r\n      setRating(0);\r\n      dispatch({ type: CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(getProduct(itemId));\r\n  }, [dispatch, itemId, createReviewSuccess]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderReviewSection = () => {\r\n    return (\r\n      product && (\r\n        <Row className=\"my-3\">\r\n          <Col md={6}>\r\n            <h2>Reviews</h2>\r\n            {!product.reviews.length && (\r\n              <Message>This product has not been reviewed yet</Message>\r\n            )}\r\n            <ListGroup variant=\"flush\">\r\n              {product.reviews.map((review) => (\r\n                <ListGroup.Item key={review._id}>\r\n                  <strong>{review.name}</strong>\r\n                  <Rating value={review.rating} />\r\n                  <p>{review.createdAt.substring(0, 10)}</p>\r\n                  <p>{review.comment}</p>\r\n                </ListGroup.Item>\r\n              ))}\r\n\r\n              <ListGroup.Item>\r\n                {createReviewError && (\r\n                  <Message variant=\"danger\">{createReviewError}</Message>\r\n                )}\r\n                {userLoginInfo ? (\r\n                  renderReviewForm()\r\n                ) : (\r\n                  <p>\r\n                    <Link to={`/login?redirect=product/${itemId}`}>\r\n                      Sign in\r\n                    </Link>{' '}\r\n                    to write a review\r\n                  </p>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  };\r\n\r\n  const renderReviewForm = () => {\r\n    const alreadyReviewed = !!product.reviews.find(\r\n      (review) => review.user === userLoginInfo._id\r\n    );\r\n\r\n    if (alreadyReviewed) return <p>You have already reviewed this product.</p>;\r\n\r\n    const { userHasPurchased, userHasReceived } = productDetails;\r\n\r\n    if (userHasPurchased && !userHasReceived) {\r\n      return (\r\n        <Message variant=\"success\">\r\n          You may post a review once you have received this product.\r\n        </Message>\r\n      );\r\n    } else if (userHasPurchased && !userHasReceived) {\r\n      return (\r\n        <Message variant=\"success\">\r\n          You may post a review once you have received this product.\r\n        </Message>\r\n      );\r\n    } else if (!userHasPurchased && !userHasReceived) {\r\n      return <p>Purchase the product and post a review!</p>;\r\n    } else if (userHasPurchased && userHasReceived) {\r\n      return (\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"rating\">\r\n            <Form.Label>Rating</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={rating}\r\n              onChange={(e) => setRating(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select ...</option>\r\n              <option value=\"1\">1 - Poor</option>\r\n              <option value=\"2\">2 - Fair</option>\r\n              <option value=\"3\">3 - Good</option>\r\n              <option value=\"4\">4 - Very Good</option>\r\n              <option value=\"5\">5 - Excelent</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"comment\">\r\n            <Form.Label>Comment</Form.Label>\r\n            <Form.Control\r\n              required\r\n              as=\"textarea\"\r\n              row=\"3\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      );\r\n    }\r\n  };\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${itemId}?qty=${qty}`);\r\n  };\r\n\r\n  const { product, error } = useSelector((state) => state.productDetails);\r\n\r\n  const renderScreen = () => {\r\n    if (error) {\r\n      return <Message variant=\"danger\">{error}</Message>;\r\n    } else if (product) {\r\n      return (\r\n        <Row>\r\n          <Col lg={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col lg={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                Description: {product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col lg={3}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => {\r\n                            setQty(e.target.value);\r\n                          }}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className=\"btn-block\"\r\n                    type=\"button\"\r\n                    disabled={product.countInStock <= 0}\r\n                    onClick={addToCartHandler}\r\n                  >\r\n                    Add To Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {renderScreen()}\r\n      {renderReviewSection()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const [paymentMethod, setpaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const existingAddress = useSelector((state) => state.cart.shippingAddress);\r\n\r\n  if (!existingAddress) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-4\">\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => {\r\n                setpaymentMethod(e.target.value);\r\n              }}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const [redirect, setRedirect] = useState('');\r\n\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n  const checkOuthandler = (id) => {\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect)\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/login',\r\n          state: {\r\n            referrer: 'shipping',\r\n            step: true,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {!cartItems.length ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={3}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        );\r\n                      }}\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => {\r\n                        removeFromCartHandler(item.product);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal(\r\n                {cartItems.reduce((acc, item) => acc + item.qty, 0)}) Items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkOuthandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  GET_ORDER_FAIL,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_DELIVERED_FAIL,\r\n  ORDER_DELIVERED_REQUEST,\r\n  ORDER_DELIVERED_SUCCESS,\r\n} from '../types/orderTypes';\r\nimport { CART_RESET } from '../types/cartTypes';\r\n\r\nimport { CLEAR_DETAILS } from '../types/userTypes';\r\n\r\nexport const createOrder = (orderData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post('/api/orders', orderData, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem('cartItems');\r\n    dispatch({\r\n      type: CART_RESET,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderById = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_ORDER_REQUEST,\r\n    });\r\n\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/order/${id}`, config);\r\n\r\n    dispatch({\r\n      type: GET_ORDER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    //Resetting user profile data after a new order is created\r\n    dispatch({\r\n      type: CLEAR_DETAILS,\r\n    });\r\n  } catch (error) {\r\n    //A customized error message below\r\n    dispatch({\r\n      type: GET_ORDER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Request failed',\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/order/${id}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    //A customized error message below\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Request failed',\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get('/api/orders/admin', config);\r\n\r\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Request failed',\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (id, userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELIVERED_REQUEST });\r\n\r\n    const { token } = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/admin/${id}/delivered`,\r\n      { userId },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ORDER_DELIVERED_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVERED_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Request failed',\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const existingAddress = cart.shippingAddress;\r\n\r\n  const paymentMethod = cart.paymentMethod;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n\r\n  if (!existingAddress) {\r\n    history.push('/shipping');\r\n  } else if (!paymentMethod) {\r\n    history.push('/payment');\r\n  }\r\n\r\n  const { order, success, error } = orderCreate;\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, success, order]);\r\n\r\n  const placeOrderHandler = () => {\r\n    const orderData = { ...cart };\r\n\r\n    //The POST request must contain an array named \"orderItems\" and not \"cartItems\", below operation is that name change.\r\n    orderData.orderItems = cart.cartItems;\r\n    delete orderData.cartItems;\r\n\r\n    dispatch(createOrder(orderData));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress && cart.shippingAddress.address},{' '}\r\n                {cart.shippingAddress && cart.shippingAddress.city},\r\n                {cart.shippingAddress && cart.shippingAddress.postalCode}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: {paymentMethod}</strong>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items:</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={5}>\r\n                          {item.qty} x ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {error && (\r\n                <ListGroup.Item>\r\n                  <Message variant=\"danger\">{error}</Message>\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../actions/orderActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { CLEAR_ORDER_DETAILS } from '../types/orderTypes';\r\n\r\nconst OrderScreen = ({ history, match }) => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const addPayPalScript = async () => {\r\n    //Dynamically adding paypal script, for more info visit: https://developer.paypal.com/docs/checkout/reference/customize-sdk/\r\n\r\n    const { data: clientId } = await axios.get('/api/config/paypal');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  const orderData = useSelector((state) => state.getOrder);\r\n\r\n  const { loading, error, order } = orderData;\r\n\r\n  const orderPay = useSelector((state) => state.getOrder);\r\n\r\n  //Renaming a destructured value\r\n  const { loading: loadingPay } = orderPay;\r\n\r\n  if (order) {\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n\r\n    order.shippingPrice = addDecimals(order.itemsPrice > 100 ? 0 : 100);\r\n\r\n    order.taxPrice = addDecimals(Number((0.15 * order.itemsPrice).toFixed(2)));\r\n  }\r\n\r\n  //A separated useEffect for a state cleanup once user leaves this page\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: CLEAR_ORDER_DETAILS });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  useEffect(() => {\r\n    //Access prohibited in case no user is logged in\r\n    if (!userInfo) {\r\n      history.push('/');\r\n    } else {\r\n      //Loading added below to prevent another request when loading is in progress. Error added because, in case it is not added, if there is an error, there will be an infinite rerender.\r\n      if (\r\n        (!order && !loading && !error) ||\r\n        (order && order._id !== match.params.id)\r\n      ) {\r\n        dispatch(getOrderById(match.params.id));\r\n      } else if (order && !order.isPaid) {\r\n        if (!window.paypal) {\r\n          addPayPalScript();\r\n        } else {\r\n          setSdkReady(true);\r\n        }\r\n      }\r\n    }\r\n  }, [error, history, userInfo, loading, order, dispatch, match.params.id]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(order._id, paymentResult));\r\n\r\n    dispatch({ type: CLEAR_ORDER_DETAILS });\r\n    dispatch(getOrderById(match.params.id));\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else if (error) {\r\n      return <Message variant=\"danger\">{error}</Message>;\r\n    } else if (order) {\r\n      return (\r\n        <>\r\n          <h1>Order {order._id}</h1>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name:</strong> {order.user.name}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email:</strong>{' '}\r\n                    <a href={`mailto:${order.user.email}`}>\r\n                      {order.user.email}\r\n                    </a>\r\n                  </p>\r\n\r\n                  <p>\r\n                    <strong>Address: </strong>\r\n                    {order.shippingAddress &&\r\n                      order.shippingAddress.address},{' '}\r\n                    {order.shippingAddress && order.shippingAddress.city},\r\n                    {order.shippingAddress && order.shippingAddress.postalCode}\r\n                  </p>\r\n                  {order.isDelivered ? (\r\n                    <Message variant=\"success\">\r\n                      Delivered at {order.deliveredAt}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Delivered</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: {order.paymentMethod}</strong>\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Order Items:</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>Your order is empty</Message>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      {order.orderItems.map((item, index) => (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={5}>\r\n                              {item.qty} x ${item.price} = $\r\n                              {(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>${order.itemsPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>${order.shippingPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>${order.taxPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {/* <Button\r\n                      type=\"button\"\r\n                      className=\"btn-block\"\r\n                      disabled={order.orderItems === 0}\r\n                    >\r\n                      Pay\r\n                    </Button> */}\r\n                  {order && !order.isPaid && (\r\n                    <ListGroup.Item>\r\n                      {loadingPay && <Loader />}\r\n                      {!sdkReady ? (\r\n                        <Loader />\r\n                      ) : (\r\n                        <PayPalButton\r\n                          amount={order.totalPrice}\r\n                          onSuccess={successPaymentHandler}\r\n                        />\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <>{renderScreen()}</>;\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\nimport { USER_LIST_RESET, DELETE_USER_RESET } from '../types/userTypes';\r\nconst UserListScreen = ({ history }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { users, loading, error } = useSelector((state) => state.userList);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { success: deleteSuccess } = useSelector((state) => state.deleteUser);\r\n\r\n  //Handling cleanup of users data\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: DELETE_USER_RESET });\r\n      dispatch({ type: USER_LIST_RESET });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  //Handing initial load\r\n  useEffect(() => {\r\n    if (!userLogin.userInfo) {\r\n      setRedirect({\r\n        pathname: '/login',\r\n        state: { referrer: '/admin/userlist' },\r\n      });\r\n    } else if (userLogin.userInfo && !userLogin.userInfo.isAdmin) {\r\n      setRedirect({\r\n        pathname: '/',\r\n      });\r\n    } else {\r\n      dispatch(listUsers());\r\n    }\r\n  }, [dispatch, userLogin, history]);\r\n\r\n  //Handling user deletion\r\n  useEffect(() => {\r\n    if (deleteSuccess) {\r\n      setMessage('User deleted');\r\n      dispatch(listUsers());\r\n    }\r\n  }, [dispatch, deleteSuccess]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure? This action is  irreversible!')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {message && <Message variant=\"success\">{message}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listProducts, deleteProductById } from '../actions/ProductActions';\r\nimport {\r\n  PRODUCT_LIST_RESET,\r\n  DELETE_PRODUCT_RESET,\r\n  CREATE_PRODUCT_RESET,\r\n  UPDATE_PRODUCT_RESET,\r\n} from '../types/productTypes';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { products, loading, error, page, pages } = useSelector(\r\n    (state) => state.productList\r\n  );\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { success: deleteSuccess } = useSelector(\r\n    (state) => state.deleteProduct\r\n  );\r\n\r\n  const { success: createSuccess } = useSelector(\r\n    (state) => state.createProduct\r\n  );\r\n\r\n  const { success: updateSuccess } = useSelector(\r\n    (state) => state.updateProduct\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (deleteSuccess) {\r\n      setMessage('Product deleted');\r\n      dispatch(listProducts('', pageNumber));\r\n    } else if (createSuccess) {\r\n      setMessage('Product created');\r\n      dispatch({ type: CREATE_PRODUCT_RESET });\r\n    } else if (updateSuccess) {\r\n      setMessage('Product updated');\r\n      dispatch({ type: UPDATE_PRODUCT_RESET });\r\n    }\r\n    return () => {\r\n      dispatch({ type: DELETE_PRODUCT_RESET });\r\n      dispatch({ type: PRODUCT_LIST_RESET });\r\n    };\r\n  }, [dispatch, deleteSuccess, createSuccess, updateSuccess, pageNumber]);\r\n\r\n  //Handing initial load\r\n  useEffect(() => {\r\n    if (!userLogin.userInfo) {\r\n      setRedirect({\r\n        pathname: '/login',\r\n        state: {\r\n          referrer: '/admin/productlist',\r\n        },\r\n      });\r\n    } else if (userLogin.userInfo && !userLogin.userInfo.isAdmin) {\r\n      setRedirect({\r\n        pathname: '/',\r\n      });\r\n    } else {\r\n      dispatch(listProducts('', pageNumber));\r\n    }\r\n  }, [dispatch, userLogin, history, pageNumber]);\r\n\r\n  const deleteProductHandler = (id) => {\r\n    dispatch(deleteProductById(id));\r\n  };\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n\r\n          <Col className=\"text-right p-0\">\r\n            <LinkContainer\r\n              to={`/admin/createproduct`}\r\n              className=\"my-3 justify-content-end\"\r\n            >\r\n              <Button>Create Product</Button>\r\n            </LinkContainer>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n\r\n      {message && <Message variant=\"success\">{message}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteProductHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nimport { createProduct } from '../actions/ProductActions';\r\n\r\nimport axios from 'axios';\r\n\r\nconst ProductCreateScreen = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [count, setCount] = useState('');\r\n  const [formData, setFormData] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { error, loading, success } = useSelector(\r\n    (state) => state.createProduct\r\n  );\r\n  useEffect(() => {\r\n    if (!userLogin.userInfo) {\r\n      setRedirect({\r\n        pathname: '/login',\r\n        state: {\r\n          referrer: '/admin/createproduct',\r\n        },\r\n      });\r\n    } else if (userLogin.userInfo && !userLogin.userInfo.isAdmin) {\r\n      setRedirect({\r\n        pathname: '/',\r\n      });\r\n    }\r\n  }, [dispatch, userLogin, history]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push('/admin/productlist');\r\n    }\r\n  }, [success, history]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('image', file);\r\n\r\n    setFormData(formData);\r\n\r\n    setImage(file.name);\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (message) setMessage(null);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      setUploading(true);\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setUploading(false);\r\n\r\n      const uploadedImage = data;\r\n\r\n      const productData = {\r\n        name,\r\n        price,\r\n        image: uploadedImage,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock: count,\r\n      };\r\n\r\n      dispatch(createProduct(productData));\r\n    } catch (error) {\r\n      setMessage('Please choose an image file');\r\n\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"product-name\">\r\n              <Form.Label>Product name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Enter Username\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Enter product brand\"\r\n                value={brand}\r\n                onChange={(e) => {\r\n                  setBrand(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Enter product category\"\r\n                value={category}\r\n                onChange={(e) => {\r\n                  setCategory(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Enter Image url or upload an image\"\r\n                value={image}\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Product price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                required\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"in-stock\">\r\n              <Form.Label>Count in stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                required\r\n                placeholder=\"Enter count in stock\"\r\n                value={count}\r\n                onChange={(e) => {\r\n                  setCount(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter product description\"\r\n                required\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create product\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return (\r\n    <>\r\n      <LinkContainer to=\"/admin/productlist\">\r\n        <Button type=\"submit\" variant=\"secondary\">\r\n          Back\r\n        </Button>\r\n      </LinkContainer>\r\n      <FormContainer>\r\n        <h1>Register Product</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {renderScreen()}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCreateScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nimport { updateProduct, getProduct } from '../actions/ProductActions';\r\n\r\nimport { PRODUCT_RESET } from '../types/productTypes';\r\n\r\nimport axios from 'axios';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [count, setCount] = useState('');\r\n  const [formData, setFormData] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { error: detailsError, loading: detailsLoading, product } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n\r\n  const { error: updateError, loading: updateLoading, success } = useSelector(\r\n    (state) => state.updateProduct\r\n  );\r\n\r\n  //Security check\r\n  useEffect(() => {\r\n    if (!userLogin.userInfo) {\r\n      setRedirect({\r\n        pathname: '/login',\r\n        state: {\r\n          referrer: `/admin/product/${productId}/edit`,\r\n        },\r\n      });\r\n    } else if (userLogin.userInfo && !userLogin.userInfo.isAdmin) {\r\n      setRedirect({\r\n        pathname: '/',\r\n      });\r\n    }\r\n  }, [dispatch, userLogin, history, productId]);\r\n\r\n  //Fetching data\r\n  useEffect(() => {\r\n    if (!product || (product && product._id !== productId)) {\r\n      dispatch(getProduct(productId));\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setImage(product.image);\r\n      setBrand(product.brand);\r\n      setCategory(product.category);\r\n      setCount(product.countInStock);\r\n      setDescription(product.description);\r\n    }\r\n  }, [product, productId, history, dispatch]);\r\n\r\n  //Success and redirect check\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push('/admin/productlist');\r\n      dispatch({ type: PRODUCT_RESET });\r\n    }\r\n  }, [success, history, dispatch]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('image', file);\r\n\r\n    setFormData(formData);\r\n\r\n    setImage(file.name);\r\n  };\r\n\r\n  const submitHandlerWithImage = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      setUploading(true);\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setUploading(false);\r\n\r\n      const uploadedImage = data;\r\n\r\n      const productData = {\r\n        name,\r\n        price,\r\n        image: uploadedImage,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock: count,\r\n      };\r\n\r\n      dispatch(updateProduct(productId, productData));\r\n    } catch (detailsError) {\r\n      setMessage('Please choose an image file');\r\n\r\n      setUploading(false);\r\n    }\r\n  };\r\n  const submitHandlerWithoutImage = () => {\r\n    const productData = {\r\n      name,\r\n      price,\r\n      image,\r\n      brand,\r\n      category,\r\n      description,\r\n      countInStock: count,\r\n    };\r\n\r\n    dispatch(updateProduct(productId, productData));\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (message) setMessage(null);\r\n\r\n    if (formData) {\r\n      submitHandlerWithImage();\r\n    } else {\r\n      submitHandlerWithoutImage();\r\n    }\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    if (detailsLoading || updateLoading) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"product-name\">\r\n              <Form.Label>Product name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Enter Username\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Enter product brand\"\r\n                value={brand}\r\n                onChange={(e) => {\r\n                  setBrand(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Enter product category\"\r\n                value={category}\r\n                onChange={(e) => {\r\n                  setCategory(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Enter Image url or upload an image\"\r\n                value={image}\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Product price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                required\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"in-stock\">\r\n              <Form.Label>Count in stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                required\r\n                placeholder=\"Enter count in stock\"\r\n                value={count}\r\n                onChange={(e) => {\r\n                  setCount(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter product description\"\r\n                required\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update product\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return (\r\n    <>\r\n      <LinkContainer to=\"/admin/productlist\">\r\n        <Button type=\"submit\" variant=\"secondary\">\r\n          Back\r\n        </Button>\r\n      </LinkContainer>\r\n      <FormContainer>\r\n        <h1>Update Product</h1>\r\n        {detailsError ||\r\n          (updateError && (\r\n            <Message variant=\"danger\">\r\n              {detailsError ? detailsError : updateError}\r\n            </Message>\r\n          ))}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {renderScreen()}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nimport { CLEAR_DETAILS } from '../types/userTypes';\r\n\r\nimport {\r\n  getUserById,\r\n  updateUserById,\r\n  resetUpdate,\r\n  clearDetailsError,\r\n} from '../actions/userActions';\r\n\r\nconst UserEditScreen = ({ history, match }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n\r\n  const { error, loading, userInfo: user, updated } = userDetails;\r\n\r\n  useEffect(() => {\r\n    if (!userLogin.userInfo) {\r\n      setRedirect({\r\n        pathname: '/login',\r\n        state: { referrer: `/admin/user/${userId}/edit` },\r\n      });\r\n    } else if (userLogin.userInfo && !userLogin.userInfo.isAdmin) {\r\n      setRedirect({\r\n        pathname: '/',\r\n      });\r\n    } else {\r\n      dispatch(getUserById(userId));\r\n    }\r\n    if (updated) setMessage('User updated');\r\n\r\n    return () => {\r\n      dispatch({ type: CLEAR_DETAILS });\r\n      dispatch(resetUpdate());\r\n      dispatch(clearDetailsError());\r\n    };\r\n  }, [userLogin, history, dispatch, updated, userId]);\r\n\r\n  useEffect(() => {\r\n    if (user && user._id === userId) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    } else if (user && user._id !== userId) {\r\n      dispatch(getUserById(userId));\r\n    }\r\n  }, [user, userId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateUserById(userId, { name, email, isAdmin }));\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => {\r\n                  setIsAdmin(e.target.checked);\r\n                }}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userList\" className=\"btn btn-light my-3\">\r\n        go back\r\n      </Link>\r\n      <FormContainer>\r\n        {message && <Message variant=\"success\">{message}</Message>}\r\n        <h1>Edit User</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          renderScreen()\r\n        )}\r\n\r\n        {}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\nimport { ORDER_LIST_RESET } from '../types/orderTypes';\r\nconst OrderListScreen = ({ history }) => {\r\n  // const [message, setMessage] = useState('');\r\n\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { orders, loading, error } = useSelector((state) => state.orderList);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  //Handling cleanup of users data\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: ORDER_LIST_RESET });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  //Handing initial load\r\n  useEffect(() => {\r\n    if (!userLogin.userInfo) {\r\n      setRedirect({\r\n        pathname: '/login',\r\n        state: { referrer: '/admin/orderlist' },\r\n      });\r\n    } else if (userLogin.userInfo && !userLogin.userInfo.isAdmin) {\r\n      setRedirect({\r\n        pathname: '/',\r\n      });\r\n    } else {\r\n      dispatch(listOrders());\r\n    }\r\n  }, [dispatch, userLogin, history]);\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {/* {message && <Message variant=\"success\">{message}</Message>} */}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>CUSTOMER</th>\r\n              <th>CUSTOMER EMAIL</th>\r\n              <th>paid</th>\r\n              <th>delivered</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/admin/order/${order._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                      {/* <i className=\"fas fa-edit\"></i> */}\r\n                    </Button>\r\n                  </LinkContainer>\r\n\r\n                  {/* <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, deliverOrder } from '../actions/orderActions';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {\r\n  CLEAR_ORDER_DETAILS,\r\n  ORDER_DELIVERED_RESET,\r\n} from '../types/orderTypes';\r\n\r\nconst AdminOrderScreen = ({ history, match }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [deliveredAt, setDeliveredAt] = useState(null);\r\n\r\n  const [deliveryBtnActive, setDeliveryBtnActive] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  const orderData = useSelector((state) => state.getOrder);\r\n\r\n  const {\r\n    success: deliverSuccess,\r\n    error: deliverError,\r\n    loading: deliverLoading,\r\n    date: deliverDate,\r\n  } = useSelector((state) => state.orderDelivered);\r\n\r\n  const { loading, error, order } = orderData;\r\n\r\n  const orderDeliveredAt = order && order.deliveredAt;\r\n\r\n  const userId = order && order.user._id;\r\n\r\n  if (order) {\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n\r\n    order.shippingPrice = addDecimals(order.itemsPrice > 100 ? 0 : 100);\r\n\r\n    order.taxPrice = addDecimals(Number((0.15 * order.itemsPrice).toFixed(2)));\r\n  }\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  useEffect(() => {\r\n    if (!userLogin.userInfo) {\r\n      setRedirect({\r\n        pathname: '/login',\r\n        state: { referrer: `/admin/order/${orderId}/edit` },\r\n      });\r\n    } else if (userLogin.userInfo && !userLogin.userInfo.isAdmin) {\r\n      setRedirect({\r\n        pathname: '/',\r\n      });\r\n    } else if (!order && !loading) {\r\n      dispatch(getOrderById(orderId));\r\n    }\r\n\r\n    if (orderDeliveredAt) {\r\n      setDeliveredAt(orderDeliveredAt);\r\n      setDeliveryBtnActive(false);\r\n    }\r\n  }, [userLogin, history, orderId, dispatch, orderDeliveredAt, loading, order]);\r\n\r\n  //A separated useEffect for a state cleanup once user leaves this page\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: CLEAR_ORDER_DETAILS });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (deliverSuccess) {\r\n      setMessage('Order updated');\r\n      setDeliveredAt(deliverDate.date);\r\n    }\r\n\r\n    if (deliverLoading || deliverSuccess) {\r\n      setDeliveryBtnActive(false);\r\n    } else if (deliverError) {\r\n      setDeliveryBtnActive(true);\r\n    }\r\n\r\n    return () => {\r\n      dispatch({ type: ORDER_DELIVERED_RESET });\r\n    };\r\n  }, [dispatch, deliverSuccess, deliverDate, deliverLoading, deliverError]);\r\n\r\n  const setDeliveredHandler = () => {\r\n    dispatch(deliverOrder(orderId, userId));\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else if (error) {\r\n      return <Message variant=\"danger\">{error}</Message>;\r\n    } else if (deliverError) {\r\n      return <Message variant=\"danger\">{deliverError}</Message>;\r\n    } else if (order) {\r\n      return (\r\n        <>\r\n          {message && <Message variant=\"success\">{message}</Message>}\r\n          <h1>Order {order._id}</h1>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name:</strong> {order.user.name}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email:</strong>{' '}\r\n                    <a href={`mailto:${order.user.email}`}>\r\n                      {order.user.email}\r\n                    </a>\r\n                  </p>\r\n\r\n                  <p>\r\n                    <strong>Address: </strong>\r\n                    {order.shippingAddress &&\r\n                      order.shippingAddress.address},{' '}\r\n                    {order.shippingAddress && order.shippingAddress.city},\r\n                    {order.shippingAddress && order.shippingAddress.postalCode}\r\n                  </p>\r\n                  {deliverLoading ? (\r\n                    <Loader width={40} height={40} />\r\n                  ) : deliveredAt ? (\r\n                    <Message variant=\"success\">\r\n                      Deilvered at {deliveredAt}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Deilvered</Message>\r\n                  )}\r\n                  <Button\r\n                    onClick={setDeliveredHandler}\r\n                    disabled={!deliveryBtnActive}\r\n                  >\r\n                    Set as delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: {order.paymentMethod}</strong>\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Order Items:</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>Your order is empty</Message>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      {order.orderItems.map((item, index) => (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={5}>\r\n                              {item.qty} x ${item.price} = $\r\n                              {(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>${order.itemsPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>${order.shippingPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>${order.taxPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {/* <Button\r\n                      type=\"button\"\r\n                      className=\"btn-block\"\r\n                      disabled={order.orderItems === 0}\r\n                    >\r\n                      Pay\r\n                    </Button> */}\r\n                  {order && !order.isPaid && <ListGroup.Item></ListGroup.Item>}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (redirect) return <Redirect to={redirect} />;\r\n\r\n  return <>{renderScreen()}</>;\r\n};\r\n\r\nexport default AdminOrderScreen;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ProductScreen from './screens/ProductScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport CartScreen from './screens/CartScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductCreateScreen from './screens/ProductCreateScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport UserEditScreen from './screens/UserEditScreen';\n\nimport OrderListScreen from './screens/OrderListScreen';\n\nimport AdminOrderScreen from './screens/AdminOrderScreen';\n\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n            exact\n          />\n\n          <Route path=\"/\" component={HomeScreen} exact />\n\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n\n          <Route path=\"/product/:id\" component={ProductScreen} />\n\n          {/* ? for optional */}\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n\n          <Route path=\"/login\" component={LoginScreen} />\n\n          <Route path=\"/register\" component={RegisterScreen} />\n\n          <Route path=\"/profile\" component={ProfileScreen} />\n\n          <Route path=\"/shipping\" component={ShippingScreen} />\n\n          <Route path=\"/payment\" component={PaymentScreen} />\n\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n\n          <Route path=\"/admin/product/:id\" component={ProductEditScreen} />\n\n          <Route path=\"/admin/createproduct\" component={ProductCreateScreen} />\n\n          <Route exact path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n\n          <Route\n            exact\n            path=\"/admin/order/:id/edit\"\n            component={AdminOrderScreen}\n          />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}